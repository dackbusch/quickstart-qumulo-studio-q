AWSTemplateFormatVersion: 2010-09-09
Description: This template builds the VPC, public and private subnets, NAT gateway, and several Security Groups

Parameters:
  VpcCidr:
    Type: String
  PublicSubnetCidr:
    Type: String
  PrivateSubnetCidr:
    Type: String
  AvailabilityZone:
    Type: String

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - !Ref "AWS::StackName"
              - " - Qumulo Adobe Quickstart"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - !Ref "AWS::StackName"
              - " - Public"

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - !Ref "AWS::StackName"
              - " - Private"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt
        - NatEIP
        - AllocationId
      SubnetId: !Ref PublicSubnet

  NatEIP:
    DependsOn: VPCGatewayAttachment
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  NatRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  default:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: default
      VpcId: !Ref VPC

  allowInternalSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "allow internal"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: !Ref VpcCidr
      VpcId: !Ref VPC

  allowsshSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow ssh
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VpcCidr
      VpcId: !Ref VPC

  allowrdpSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow rdp
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5986
          ToPort: 5986
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  allowicmpSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow icmp
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: 8
          ToPort: 0
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  allowpcoipSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow pcoip
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  allowqumuloSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow qumulo
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 3712
          ToPort: 3712
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 21
          ToPort: 21
          CidrIp: !Ref VpcCidr
        - IpProtocol: udp
          FromPort: 2049
          ToPort: 2049
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 111
          ToPort: 111
          CidrIp: !Ref VpcCidr
      VpcId: !Ref VPC

  allowleaderqumuloSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: allow leader qumulo
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref PrivateSubnetCidr
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref PrivateSubnetCidr
      VpcId: !Ref VPC

Outputs:
  VPCID:
    Value: !Ref VPC
  PrivateSubnetId:
    Value: !Ref PrivateSubnet
  PublicSubnetId:
    Value: !Ref PublicSubnet
  allowleaderqumuloSGId:
    Value: !Ref allowleaderqumuloSG
  allowqumuloSGId:
    Value: !Ref allowqumuloSG
  allowrdpSGId:
    Value: !Ref allowrdpSG
  allowInternalSGId:
    Value: !Ref allowInternalSG

