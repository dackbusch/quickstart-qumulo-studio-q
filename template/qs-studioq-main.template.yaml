AWSTemplateFormatVersion: "2010-09-09"

Description: This is the main template for the StudioQ AWS Quick Start.  It spins up Qumulo+Adobe+Teradici for a remote editorial environment.  It calls subordinate CloudFormation templates to instantiate the infrastructure. (qs-1rkounelh)

Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing VPC"
    Order: "2"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
          - KeyPair
          - SecretKeyName

      - Label: 
          default: AWS Network Configuration
        Parameters:
          - VpcId
          - VpcCidr
          - PublicSubnetId
          - PublicSubnetCidr
          - PrivateSubnetId
          - PrivateSubnetCidr

      - Label:
          default: EC2 Security Group configuration
        Parameters:
          - allowInternalSGId
          - allowqumuloSGId
          - allowrdpSGId

      - Label:
          default: Qumulo File Data Platform Configuration
        Parameters:
          - QCapacityType
          - QInstanceType
          - VolumesEncryptionKey
          - QClusterName
          - QSgCidr
          - ProvisioningServerAMI
          - SMBShareName
          - QInstanceRecoveryTopic

      - Label:
          default: Qumulo CloudWatch Metrics & Monitoring Configuration
        Parameters:
          - SideCarUsername
          - SideCarPassword
          - SideCarTemplate
          - SideCarSNSTopic

      - Label:
          default: Adobe Workstation Configuration
        Parameters:
          - windowsGfxInstanceAMI
          - windowsGrxInstanceType
          - numberOfWorkstations

      - Label:
          default: Domain Controller (Active Directory & DNS) Configuration
        Parameters:
          - adServiceAccountUsername
          - adServiceAccountPassword
          - dcAdminUsername
          - dcAdminPassword
          - safeModeAdminPassword
          - testusername
          - testuserpassword
          - DirectoryServerAmi
          - dcInstanceType
          - domainName
          - qumuloFloatRecordName

    ParameterLabels:
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      allowInternalSGId:
        default: Internal security group ID
      allowqumuloSGId:
        default: Qumulo security group ID
      allowrdpSGId:
        default: RDP security group ID
      KeyPair:
        default: "MANDATORY: AWS Key-Pair Name"
      SecretKeyName:
        default: "MANDATORY: AWS Secret Key Name"
      AvailabilityZone:
        default: "MANDATORY: Specify an AZ"
      VpcId:
        default: "AWS VPC ID"
      PublicSubnetId:
        default: "Public subnet ID"
      PrivateSubnetId:
        default: "Private subnet ID"
      VpcCidr:
        default: "PREFER DEFAULT: AWS VPC Subnet"
      PublicSubnetCidr:
        default: "PREFER DEFAULT: AWS VPC Public Subnet"
      PrivateSubnetCidr:
        default: "PREFER DEFAULT: AWS VPC Private Subnet"
      QClusterName:
        default: "PREFER DEFAULT: Qumulo Cluster Name"
      QInstanceType:
        default: "MANDATORY: Qumulo EC2 Instance Type"
      QCapacityType:
        default: "MANDATORY: Qumulo Usable Capacity and Media Type"
      VolumesEncryptionKey:
        default: "OPTIONAL: AWS EBS Volumes Encryption Key "
      QInstanceRecoveryTopic:
        default: "OPTIONAL: Qumulo Instance Recovery Topic"
      QSgCidr:
        default: "PREFER DEFAULT: Qumulo Security Group "
      ProvisioningServerAMI:
        default: "PREFER DEFAULT: Linux Server for Secondary Configuration of Qumulo "
      SMBShareName:
        default: "PREFER DEFAULT: SMB Share Name "
      SideCarTemplate:
        default: "PREFER DEFAULT: Qumulo Sidecar Template URL "
      SideCarUsername:
        default: "PREFER DEFAULT: Qumulo Sidecar Username "
      SideCarPassword:
        default: "MANDATORY: Qumulo Sidecar Password "
      SideCarSNSTopic:
        default: "OPTIONAL: Qumulo Sidecar SNS Topic "
      windowsGfxInstanceAMI:
        default: "MANDATORY: AWS Teradici AMI "
      windowsGrxInstanceType:
        default: "MANDATORY: AWS Teradici Instance Type "
      numberOfWorkstations:
        default: "OPTIONAL: Total Number of Adobe Workstations"
      DirectoryServerAmi:
        default: "PREFER DEFAULT: AWS Directory Server AMI "
      dcInstanceType: 
        default: "PREFER DEFAULT: AWS Directory Server Instance Type "
      domainName: 
        default: "PREFER DEFAULT: Domain Name "
      adServiceAccountUsername:
        default: "PREFER DEFAULT: Active Directory Service Admin Username "
      adServiceAccountPassword:
        default: "MANDATORY: Active Directory Service Admin Password "
      dcAdminUsername:
        default: "PREFER DEFAULT: Domain Controller Admin Username "
      dcAdminPassword:
        default: "MANDATORY: Domain Controller Admin Password "
      safeModeAdminPassword:
        default: "MANDATORY: Domain Controller Safe-Mode Admin Password "
      testusername:
        default: "PREFER DEFAULT: Active Directory Account Username "
      testuserpassword: 
        default: "MANDATORY: Active Directory Account User Password "
      qumuloFloatRecordName:
        default: "PREFER DEFAULT: DNS Record Name for Qumulo RR DNS "

Parameters:

  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a 
      hyphen (-).
    Default: aws-quickstart
    Description:
      Name of the S3 bucket for your copy of the Quick Start assets. 
      Keep the default name unless you are customizing the template. 
      Changing the name updates code references to point to a new Quick 
      Start location. This name can include numbers, lowercase letters, 
      uppercase letters, and hyphens, but do not start or end with a hyphen (-). 
      See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is 
    hosted. Keep the default Region unless you are customizing the template. 
    Changing this Region updates code references to point to a new Quick Start location. 
    When using your own bucket, specify the Region. 
    See https://aws-quickstart.github.io/option1.html.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-qumulo-studio-q/
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the 
      Quick Start assets. Keep the default prefix unless you are customizing 
      the template. Changing this prefix updates code references to point to 
      a new Quick Start location. This prefix can include numbers, lowercase 
      letters, uppercase letters, hyphens (-), and forward slashes (/). 
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html 
      and https://aws-quickstart.github.io/option1.html.
    Type: String
  
  allowInternalSGId:
    Description: ID of the internal security group (e.g., sg-7f16e910).
    Type: AWS::EC2::SecurityGroup::Id

  allowqumuloSGId:
    Description: ID of the Qumulo security group (e.g., sg-7f16e910).
    Type: AWS::EC2::SecurityGroup::Id

  allowrdpSGId:
    Description: ID of the RDP security group (e.g., sg-7f16e910).
    Type: AWS::EC2::SecurityGroup::Id

  KeyPair:
    Description: Name of an existing EC2 Key Pair to enable authentication to instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: keypairname

  SecretKeyName:
    Description: Name of an existing Secret in Secrets Manager that stores the Key Pair PEM file as plaintext
    Type: String
    Default: pemsecret

  AvailabilityZone:
    Description: All resources will be created in this AZ
    Type: AWS::EC2::AvailabilityZone::Name

  VpcId:
    Description: ID of the VPC (e.g., vpc-0343606e).
    Type: AWS::EC2::VPC::Id

  PublicSubnetId:
    Description: ID of the private subnet.
    Type: AWS::EC2::Subnet::Id

  PrivateSubnetId:
    Description: ID of the private subnet.
    Type: AWS::EC2::Subnet::Id

  VpcCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
    Description: Must be specified as an IPv4 address followed by / and a subnet mask of 0-32.
    Type: String
    Default: "10.0.0.0/16"

  PublicSubnetCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
    Description: Must be specified as an IPv4 address followed by / and a subnet mask of 0-32.
    Type: String
    Default: "10.0.1.0/24"

  PrivateSubnetCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
    Description: Must be specified as an IPv4 address followed by / and a subnet mask of 0-32.
    Type: String
    Default: "10.0.2.0/24"

  QClusterName:
    AllowedPattern: "^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$"
    Description: Name must be an alpha-numeric string between 2 and 15 characters. Dash (-) is allowed if not the first or last character.
    MaxLength: 15
    MinLength: 2
    Type: String
    Default: CloudQ

  QCapacityType:
    AllowedValues:
      - "1TB All Flash"
      - "12TB Hybrid"
    Description: "1TB All Flash or 12TB Hybrid (Flash First architecture with st1 backing disks)"
    Type: String
    Default: "1TB All Flash"

  QInstanceType:
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
    Description: "EC2 instance type for Qumulo nodes. Write/Read Max Throughput in MB/s: m5.2xlarge = 850/2250, m5.8xlarge = 1200/2550, c5n.9xlarge = 1650/2550" 
    Type: String
    Default: "m5.xlarge"

  VolumesEncryptionKey: 
    Description: The AWS KMS Key to encrypt the volumes. Use either a key ID, ARN, or
      an Alias. Aliases must begin with alias/ followed by the name, such as alias/exampleKey.
      If empty, the default KMS EBS key will be used. Choosing an invalid key name
      will cause the instance to fail to launch.
    Type: String
    Default: 3d26f779-69a4-4de1-b16f-3a69152ce1ee

  QInstanceRecoveryTopic:
    Description: Optionally enter the ARN of an SNS topic that receives messages when an instance alarm is triggered.
    Type: String
    Default: ""

  QSgCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
    Description: An IPv4 CIDR block for specifying the generated security group's allowed addresses for inbound traffic. Set to x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all IP addresses access, or another CIDR range.
    Type: String
    Default: "10.0.0.0/16"

  ProvisioningServerAMI: 
    Description: AWS Linux Server AMI
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  SMBShareName:
    Description: SMB Share Name
    Type: String
    Default: adobe-projects

  SideCarTemplate:
    Description: Do not change this unless  newer version of Qumulo is being used.
    Type: String
    Default: "https://qumulo-sidecar-us-east-1.s3.amazonaws.com/3.3.0/sidecar_cft.json"

  SideCarUsername:
    Type: String
    Default: SideCarUser

  SideCarPassword:
    AllowedPattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&\\-_])[A-Za-z\\d@$!%*?&\\-_]{8,}$"
    Description: "Minumum 8 characters and must include one each of: uppercase, lowercase, and a special character."
    MaxLength: 128
    MinLength: 8
    Type: String
    Default: secuRe_pwd4
    NoEcho: "true"

  SideCarSNSTopic:
    Description: Optionally enter an SNS topic ARN that lambda errors and successful disk replacements will be published to
    Type: String
    Default: ""

  windowsGfxInstanceAMI: 
    Description: Enter the Teradici image ID from marketplace
    Type: AWS::EC2::Image::Id
    Default: ami-0ccbb970e1176a12c

  windowsGrxInstanceType:
    AllowedValues:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.16xlarge
    Description: "Adobe Editorial Personas: 2xlarge = News/Simple Edit, 4xlarge = Creative, 8xlarge = Promo"
    Type: String
    Default: "g4dn.xlarge"

  numberOfWorkstations:
    AllowedValues:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - "8"
      - "9"
      - "10"
    Description: "Specify the total number of workstations to build with the instance type above."
    Type: String
    Default: "1"

  DirectoryServerAmi:
    Description: AWS Windows Server AMI for Domain Controller and Active Directory
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"

  dcInstanceType:
    Description: Domain Controller Instance Type
    Type: String
    Default: "t3.large"

  domainName:
    Description: Private DNS Fully Qualified Domain Name
    AllowedPattern: '[a-zA-Z0-9]+\..+'
    MaxLength: '255'
    MinLength: '2'
    Type: String
    Default: "studioq.com"

  adServiceAccountUsername:
    Description: User name for the account that will be added as Service Administrator.
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: 5
    MaxLength: 25
    Type: String
    Default: SvcAdmin

  adServiceAccountPassword:
    Description: Password for the Service Administrator user. Must be at least 8 characters containing letters, numbers and symbols.
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    MinLength: 8
    MaxLength: 32
    Type: String
    Default: secuRe_pwd3
    NoEcho: "true"

  dcAdminUsername:
    Description: User name for the account that will be added as Domain Administrator.  This is separate from the default "Administrator" account.
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: 5
    MaxLength: 25
    Type: String
    Default: administrator

  dcAdminPassword:
    Description: Password for the Domain Administrator user. Must be at least 8 characters containing letters, numbers and symbols.
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    MinLength: 8
    MaxLength: 32
    Type: String
    Default: secuRe_pwd1
    NoEcho: "true"

  safeModeAdminPassword:
    Description: Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols.
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    MinLength: 8
    MaxLength: 32
    Type: String
    Default: secuRe_pwd2
    NoEcho: "true"

  testusername:
    Description: User name for an Active Directory account that will be added.
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: 5
    MaxLength: 25
    Type: String
    Default: studioqUser

  testuserpassword:
    Description: Password for the Active Directory account user name that will be added. Must be at least 8 characters containing letters, numbers and symbols.
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    MinLength: 8
    MaxLength: 32
    Type: String
    Default: CloudIsCool202!
    NoEcho: "true"

  qumuloFloatRecordName:
    Description: Record Name for Round Robin DNS entries for Qumulo Cluster floating IPs
    Type: String
    Default: qumulo

Conditions:

  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

  4x5TBHybrid: !Equals
    - !Ref QCapacityType
    - "12TB Hybrid"

  Two:    !Equals [!Ref numberOfWorkstations, "2"]
  Three:  !Equals [!Ref numberOfWorkstations, "3"]
  Four:   !Equals [!Ref numberOfWorkstations, "4"]
  Five:   !Equals [!Ref numberOfWorkstations, "5"]
  Six:    !Equals [!Ref numberOfWorkstations, "6"]
  Seven:  !Equals [!Ref numberOfWorkstations, "7"]
  Eight:  !Equals [!Ref numberOfWorkstations, "8"]
  Nine:   !Equals [!Ref numberOfWorkstations, "9"]
  Ten:    !Equals [!Ref numberOfWorkstations, "10"]

  Provision2: !Or [Condition: Two, Condition: Three, Condition: Four, Condition: Five, Condition: Six, Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision3: !Or [Condition: Three, Condition: Four, Condition: Five, Condition: Six, Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision4: !Or [Condition: Four, Condition: Five, Condition: Six, Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision5: !Or [Condition: Five, Condition: Six, Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision6: !Or [Condition: Six, Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision7: !Or [Condition: Seven, Condition: Eight, Condition: Nine, Condition: Ten]
  Provision8: !Or [Condition: Eight, Condition: Nine, Condition: Ten]
  Provision9: !Or [Condition: Nine, Condition: Ten]

Resources:
#  AWSVPCSTACK:
#    Type: "AWS::CloudFormation::Stack"
#    Properties:
#      Parameters:
#        PrivateSubnetCidr: !Ref PrivateSubnetCidr
#        PublicSubnetCidr: !Ref PublicSubnetCidr
#        VpcCidr: !Ref VpcCidr
#        AvailabilityZone: !Ref AvailabilityZone
#      TemplateURL: !Sub "https://${QSS3BucketName}.s3.${AWS::URLSuffix}/${QSS3KeyPrefix}/cfn/aws-vpc.cft.yaml"
#      TimeoutInMinutes: 150

  SECRETSSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: AWSVPCSTACK
    Properties:
      Parameters:
        SideCarUsername: !Ref SideCarUsername
        SideCarPassword: !Ref SideCarPassword
        adServiceAccountUsername: !Ref adServiceAccountUsername
        adServiceAccountPassword: !Ref adServiceAccountPassword
        dcAdminUsername: !Ref dcAdminUsername
        dcAdminPassword: !Ref dcAdminPassword
        safeModeAdminPassword: !Ref safeModeAdminPassword
        testusername: !Ref testusername
        testuserpassword: !Ref testuserpassword
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/store-secrets.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150      

  QIAMSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: AWSVPCSTACK
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qiam.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  QSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: QIAMSTACK
    Properties:
      Parameters:
        ClusterName: !Ref QClusterName
        IamInstanceProfile: !GetAtt QIAMSTACK.Outputs.QumuloIAMProfile
        InstanceRecoveryTopic: !Ref QInstanceRecoveryTopic
        InstanceType: !Ref QInstanceType
        KeyName: !Ref KeyPair
        SgCidr: !Ref QSgCidr
        SubnetId: !Ref PrivateSubnetId
        VolumesEncryptionKey: !Ref VolumesEncryptionKey
        VpcId: !Ref VpcId
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/${QTemplate}
          - QSTemplate: !If [4x5TBHybrid, '4x5TiB-Hybrid-st1-SA.template.json', '4x600GiB-AF-SA.template.json']
            S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  MGMTNLBSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: QSTACK
    Properties:
      Parameters:
        VPCID: !Ref VpcId
        PublicSubnetID: !Ref PublicSubnetId
        NodeIPs: !GetAtt QSTACK.Outputs.ClusterPrivateIPs
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/mgmt-nlb.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  DCSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: MGMTNLBSTACK
    Properties:
      Parameters:
        DirectoryServerAmi: !Ref DirectoryServerAmi
        DirectoryServerKeyName: !Ref KeyPair
        DirectoryServerSG: !Ref allowInternalSGId
        DirectoryServerSubnet: !Ref PrivateSubnetId
        DirectoryServerVPC: !Ref VpcId
        DomainNetBIOSName: !Select [0, !Split [".", !Ref domainName]]
        adServiceAccountPassword: !Ref adServiceAccountPassword
        adServiceAccountUsername: !Ref adServiceAccountUsername
        testusername: !Ref testusername
        testuserpassword: !Ref testuserpassword
        dcAdminPassword: !Ref dcAdminPassword
        dcInstanceType: !Ref dcInstanceType
        domainName: !Ref domainName
        safeModeAdminPassword: !Ref safeModeAdminPassword
        floatIPs: !GetAtt QSTACK.Outputs.ClusterSecondaryPrivateIPs
        recordName: !Ref qumuloFloatRecordName
        RootURL:
          !Sub
            - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}"
            - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
              S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/dc.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  PROVISIONINGSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: DCSTACK
    Properties:
      Parameters:
        ProvisioningServerAMI: !Ref ProvisioningServerAMI
        SecretKeyName: !Ref SecretKeyName
        SecretsManagedPolicy: "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
        KeyName: !Ref KeyPair
        Region: !Ref AWS::Region
        PrivateSubnetId: !Ref PrivateSubnetId
        PrivateSubnetCidr: !Ref PrivateSubnetCidr
        Node1IP: !Select [0, !Split [", ", !GetAtt QSTACK.Outputs.ClusterPrivateIPs]]
        FloatIPs: !GetAtt QSTACK.Outputs.ClusterSecondaryPrivateIPs
        SMBShareName: !Ref SMBShareName
        ClusterPwd: !GetAtt QSTACK.Outputs.TemporaryPassword
        VPCID: !Ref VpcId
        domainName: !Ref domainName
        dcServerIp: !GetAtt DCSTACK.Outputs.DirectoryserverPrivateIP
        DomainControllerSecretsArn: !GetAtt SECRETSSTACK.Outputs.DomainControllerSecretsArn
        SideCarSecretsArn: !GetAtt SECRETSSTACK.Outputs.SideCarSecretsArn
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/provisioning-node.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  QSIDECARSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: PROVISIONINGSTACK
    Properties:
      Parameters:
        SecurityGroup: !Ref allowqumuloSGId
        SNSTopic: !Ref SideCarSNSTopic
        Subnet: !Ref PrivateSubnetId
        Username: !Ref SideCarUsername
        Password: !Ref SideCarPassword
        Hosts: !GetAtt QSTACK.Outputs.ClusterPrivateIPs
      TemplateURL: !Ref SideCarTemplate
      TimeoutInMinutes: 150

  WORKSTATIONSTACK:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: PROVISIONINGSTACK
    Properties:
      Parameters:
        FirstStation: "TRUE"
        WorkstationNumber: "1"
        adServiceAccountPassword: !Ref adServiceAccountPassword
        adServiceAccountUsername: !Ref adServiceAccountUsername
        domainName: !Ref domainName
        gfxworkstationKeyName: !Ref KeyPair
        gfxworkstationSG: !Ref allowrdpSGId
        gfxworkstationSubnet: !Ref PublicSubnetId
        pcoipAgentFilename: "null"
        pcoipAgentLocationUrl: "https://downloads.teradici.com/win/stable/"
        pcoipRegistrationCode: "X60YKMSS4VEE@0633-9958-E79C-F865"
        windowsGfxInstanceAMI: !Ref windowsGfxInstanceAMI
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        workstationAdminPassword: !Ref adServiceAccountPassword
        SMBShareName: !Ref SMBShareName
        FloatDNSName: !Ref qumuloFloatRecordName
        DomainControllerSecretsName: !GetAtt SECRETSSTACK.Outputs.DomainControllerSecretsName 
        RootURL:
          !Sub
            - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}"
            - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
              S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/gfx-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK2:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision2
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "2"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK3:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision3
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "3"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK4:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision4
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "4"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK5:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision5
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "5"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK6:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision6
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "6"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK7:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision7
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "7"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK8:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision8
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "8"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK9:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Provision9
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "9"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

  WORKSTATIONSTACK10:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: WORKSTATIONSTACK
    Condition: Ten
    Properties:
      Parameters:
        WorkstationStackName: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
        windowsGrxInstanceType: !Ref windowsGrxInstanceType
        WorkstationNumber: "10"
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}template/cfn/qs-studioq-add-workstation.cft.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 150

Outputs:

  QumuloPublicIP:
    Description: Public IP for Qumulo Cluster Management
    Value: !GetAtt MGMTNLBSTACK.Outputs.ManagementEIP
  QumuloTempPassword:
    Description: Temporary Password for Qumulo Cluster
    Value: !GetAtt QSTACK.Outputs.TemporaryPassword
  QumuloKnowledgeBase:
    Description: Qumulo Knowledge Base
    Value: !GetAtt QSTACK.Outputs.QumuloKnowledgeBase
  WorkstationPublicIP1:
    Description: "Public IP for Adobe Workstation #1"
    Value: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationPublicIP
  WorkstationPublicIP2:
    Description: "Public IP for Adobe Workstation #2"
    Value: !GetAtt WORKSTATIONSTACK2.Outputs.GFXWorkstationPublicIP
    Condition: Provision2
  WorkstationPublicIP3:
    Description: "Public IP for Adobe Workstation #3"
    Value: !GetAtt WORKSTATIONSTACK3.Outputs.GFXWorkstationPublicIP
    Condition: Provision3
  WorkstationPublicIP4:
    Description: "Public IP for Adobe Workstation #4"
    Value: !GetAtt WORKSTATIONSTACK4.Outputs.GFXWorkstationPublicIP
    Condition: Provision4
  WorkstationPublicIP5:
    Description: "Public IP for Adobe Workstation #5"
    Value: !GetAtt WORKSTATIONSTACK5.Outputs.GFXWorkstationPublicIP
    Condition: Provision5
  WorkstationPublicIP6:
    Description: "Public IP for Adobe Workstation #6"
    Value: !GetAtt WORKSTATIONSTACK6.Outputs.GFXWorkstationPublicIP
    Condition: Provision6
  WorkstationPublicIP7:
    Description: "Public IP for Adobe Workstation #7"
    Value: !GetAtt WORKSTATIONSTACK7.Outputs.GFXWorkstationPublicIP
    Condition: Provision7
  WorkstationPublicIP8:
    Description: "Public IP for Adobe Workstation #8"
    Value: !GetAtt WORKSTATIONSTACK8.Outputs.GFXWorkstationPublicIP
    Condition: Provision8
  WorkstationPublicIP9:
    Description: "Public IP for Adobe Workstation #9"
    Value: !GetAtt WORKSTATIONSTACK9.Outputs.GFXWorkstationPublicIP
    Condition: Provision9
  WorkstationPublicIP10:
    Description: "Public IP for Adobe Workstation #10"
    Value: !GetAtt WORKSTATIONSTACK10.Outputs.GFXWorkstationPublicIP
    Condition: Ten
  WorkstationStackName:
    Description: Use this StackName to turn up additional Adobe Workstations with the qs-studioq-add-workstation.cft.yaml template.
    Value: !GetAtt WORKSTATIONSTACK.Outputs.GFXWorkstationStackName
  TeradiciPCoIPClientURL:
    Description: Use this URL to download the PCoIP client for your Windows/Mac/Linux local machine.
    Value: "https://docs.teradici.com/find/product/software-and-mobile-clients"



